@charset "UTF-8";
/*
[Master Stylesheet]
Project: Zulu
Version: 1.0
Author: Yegor Borisenco <pimmey@pimmey.com>
Author profile: https://themeforest.net/user/pimmey

[Table of Contents]
0 Typography
1 Global elements
2 Navigation
3 Hero section
4 Block layout
5 Modal
6 Expertise section
7 Pricing section
8 Journal section
9 Form
10 Toasts
11 Slider

[Color codes]
# Zulu makes use of the beautiful Material design Color Palette - http://materializecss.com/color.html#palette
# As well as randomly generated colors
White: #fff;
Black: #373737;

[Typography]
# Check out http://materializecss.com/typography.html for more details
font-family -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif
body:       14.5px
p:          Responsive flow text (http://materializecss.com/typography.html#flow)
h2:         3.56rem/110%
h3:         2.92rem/110%
h4:         2.28rem/110%
h5:         1.64rem/110%
*/
/*---------------------------------------------------------------------------------------

0 Typography

-----------------------------------------------------------------------------------------*/
html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  color: #fff;
}

body,
input,
textarea,
select,
button {
  -moz-font-feature-settings: 'liga', 'kern';
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-kerning: normal;
}

h1,
h2 {
  font-weight: 600;
}

@media only screen and (max-width: 992px) {
  h1 {
    font-size: 3.5rem;
  }
  h2 {
    font-size: 3rem;
  }
}

@media only screen and (max-width: 600px) {
  h1 {
    font-size: 2.5rem;
  }
  h2 {
    font-size: 2rem;
  }
}

p,
ul {
  font-size: 18px;
}

.m-dash-list li::before {
  content: '— ';
}

blockquote {
  padding: 0;
  font-size: 2.5rem;
  font-weight: 400;
  letter-spacing: -.01em;
  border: 0;
}

blockquote .quote {
  margin-left: -18px;
}

@media only screen and (max-width: 600px) {
  blockquote {
    font-size: 1.75rem;
  }
  blockquote .quote {
    margin-left: -12px;
  }
}

/*---------------------------------------------------------------------------------------

1 Global elements

-----------------------------------------------------------------------------------------*/
body {
  overflow-x: hidden;
}

section {
  padding: 5rem 0;
}

.section {
  padding: 0;
}

.container {
  width: 90%;
  max-width: 1400px;
}

@media only screen and (min-width: 601px) {
  .container {
    width: 80%;
  }
}

@media only screen and (min-width: 993px) {
  .container {
    width: 80%;
  }
}

iframe {
  border: 0;
}

figure {
  margin: 0;
}

strong {
  font-weight: 700;
}

address {
  margin: 1em 0;
  font-style: normal;
}

.responsive-img {
  display: block;
  width: 100%;
}

.explosion {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

a {
  color: #fff;
}

.flow-text {
  font-weight: 400;
}

footer {
  padding: 5rem 0;
}

@media only screen and (max-width: 992px) {
  footer {
    text-align: center;
  }
}

.underline {
  text-decoration: underline;
}

.underline:hover {
  text-decoration: none;
}

.underline.waves-effect {
  overflow: visible;
}

.backdrop {
  display: none !important;
}

.material-tooltip {
  background-color: rgba(55, 55, 55, 0.8);
}

@media only screen and (max-width: 992px) {
  .big-margin-on-medium-and-down {
    margin-bottom: 3rem;
  }
  .margin-on-medium-and-down {
    margin-bottom: 1.5rem;
  }
  .center-on-medium-and-down {
    text-align: center;
  }
}

.push-row {
  margin-bottom: 5rem;
}

@media only screen and (max-width: 992px) {
  .push-row {
    margin-bottom: 3rem;
  }
}

/*---------------------------------------------------------------------------------------

2 Navigation

-----------------------------------------------------------------------------------------*/
nav {
  top: -100%;
  height: 100px;
  line-height: 100px;
  background: transparent;
  box-shadow: none;
  transition: top 0.4s cubic-bezier(0.075, 0.82, 0.165, 1) 0.5s;
}

nav.active {
  top: 0;
}

nav ul a {
  position: relative;
  padding: 0 1.25rem;
  font-size: 1.25rem;
  font-weight: 500;
}

nav ul a.waves-effect {
  overflow: visible;
}

nav ul a:hover {
  background-color: transparent;
}

nav ul a.active::after {
  position: absolute;
  top: -1.5rem;
  left: 50%;
  content: '•';
  transform: translateX(-50%);
}

nav .brand-logo {
  top: 5px;
  padding: 0 2rem;
}

nav .sidenav-toggle {
  margin-right: 1rem;
}

.side-nav {
  background-color: rgba(55, 55, 55, 0.4);
  box-shadow: none;
}

.side-nav a {
  height: auto;
  padding: 1rem 3rem;
  line-height: inherit;
  color: #fff;
}

.side-nav a.active::after {
  top: .9rem;
  left: 1.5rem;
}

.navbar-fixed {
  height: 0;
}

/*---------------------------------------------------------------------------------------

3 Hero section

-----------------------------------------------------------------------------------------*/
.hero {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
}

.hero h1 {
  margin: 0;
  text-align: center;
}

/*---------------------------------------------------------------------------------------

4 Block layout

-----------------------------------------------------------------------------------------*/
.square {
  padding-bottom: calc(100% - 2rem);
}

.rectangle {
  padding-bottom: 70%;
}

.rectangle-vertical {
  padding-bottom: 140%;
}

.rectangle-horizontal {
  padding-bottom: 35%;
}

.rectangle-60 {
  padding-bottom: 60%;
}

.rectangle-120 {
  padding-bottom: 120%;
}

@media only screen and (max-width: 992px) {
  .rectangle,
  .rectangle-vertical,
  .rectangle-horizontal {
    padding-bottom: 70%;
  }
}

.block {
  position: relative;
  display: block;
  height: 0;
  overflow: hidden;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  transform: translate3d(0, 0, 0);
  transition: all 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.block .content {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: all 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.block .title {
  padding: 2rem;
  opacity: 0;
  transition: none;
}

.block .title::after {
  position: relative;
  left: -1rem;
  content: ' →';
  opacity: 0;
  transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.block .cases {
  position: absolute;
  right: 0;
  bottom: 0;
  padding: 2rem;
  opacity: .75;
}

@media only screen and (max-width: 992px) {
  .block .content {
    background: transparent !important;
    opacity: 1;
  }
  .block .title,
  .block .cases {
    display: inline-block;
    padding: .25rem;
    font-size: 1.25rem;
    color: #373737;
    background: #fff;
    opacity: 1;
  }
  .block .cases {
    top: 2.75rem;
    right: auto;
    bottom: auto;
    left: .5rem;
  }
  .block .title {
    margin-top: .5rem;
    margin-left: .5rem;
  }
  .block .title::after {
    content: '';
  }
}

@media only screen and (min-width: 993px) {
  .block:hover {
    box-shadow: 10px 10px #fff;
  }
  .block:hover .content {
    opacity: 1;
  }
  .block:hover .title {
    opacity: 1;
    transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  }
  .block:hover .title::after {
    left: 0;
    opacity: 1;
  }
}

.blocks .row {
  margin: 0;
}

.blocks .col {
  padding: 0;
}

.blocks .block {
  margin: 1rem;
}

.blocks.no-margin .block {
  margin: 0;
}

.blocks .rectangle-120 {
  padding-bottom: calc(120% + 2rem);
}

/*---------------------------------------------------------------------------------------

5 Modal

-----------------------------------------------------------------------------------------*/
.modal.bottom-sheet {
  z-index: 1300;
  height: 100%;
  max-height: inherit;
  color: #373737;
  background-color: #fff;
}

.modal.bottom-sheet .modal-content {
  padding: 10rem 1rem 5rem;
}

@media only screen and (max-width: 992px) {
  .modal.bottom-sheet .modal-content {
    padding: 7rem 1rem 3rem;
  }
}

@media only screen and (max-width: 600px) {
  .modal.bottom-sheet .modal-content {
    padding: 5rem 1rem 1.5rem;
  }
}

.modal.bottom-sheet .spacious-row {
  margin-bottom: 5rem;
}

@media only screen and (max-width: 600px) {
  .modal.bottom-sheet .colors .spacious-row:not(:last-of-type) {
    margin-bottom: 0;
  }
}

@media only screen and (max-width: 992px) {
  .modal.bottom-sheet .meta strong {
    display: block;
    margin-bottom: 1rem;
  }
}

.modal-close {
  position: fixed;
  top: 0;
  left: 1.5rem;
  z-index: 10000;
  font-size: 3rem;
}

@media only screen and (min-width: 601px) {
  .modal-close::after {
    position: absolute;
    top: 0;
    left: 0;
    font-size: 1rem;
    content: 'esc';
  }
}

.modal-cover {
  position: relative;
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.modal-cover h1 {
  position: absolute;
  bottom: 2rem;
  width: 100%;
  padding: 0 2rem;
  margin: 0;
  font-size: 10rem;
}

@media only screen and (max-width: 992px) {
  .modal-cover h1 {
    font-size: 5rem;
  }
}

@media only screen and (max-width: 600px) {
  .modal-cover h1 {
    font-size: 2.5rem;
  }
}

.modal-nav-container {
  padding: 7rem 0 2rem;
}

.modal-nav-container a {
  position: relative;
  color: inherit;
}

@media only screen and (min-width: 993px) {
  .modal-nav-container a:hover .arrow.left-arrow {
    right: -2rem;
  }
  .modal-nav-container a:hover .arrow.right-arrow {
    left: -2rem;
  }
}

.modal-nav-container .arrow {
  position: absolute;
  transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.modal-nav-container .arrow.left-arrow {
  right: -1rem;
}

.modal-nav-container .arrow.right-arrow {
  left: -1rem;
}

@media only screen and (max-width: 600px) {
  .modal-nav-container .arrow.left-arrow {
    right: -.5rem;
  }
  .modal-nav-container .arrow.right-arrow {
    left: -.5rem;
  }
}

.bottom-image {
  margin-bottom: -95px;
}

@media only screen and (max-width: 992px) {
  .bottom-image {
    margin-bottom: -90px;
  }
}

/*---------------------------------------------------------------------------------------

6 Expertise section

-----------------------------------------------------------------------------------------*/
.expertise svg {
  opacity: 0;
}

.expertise.animate svg {
  opacity: 1;
}

.expertise.animate svg > * {
  animation: draw 3s forwards 1 cubic-bezier(0.47, 0, 0.745, 0.715);
  stroke-width: 2;
  stroke-dasharray: 500px;
  stroke-dashoffset: 500px;
}

.expertise .service-title {
  margin-top: 2rem;
}

@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

/*---------------------------------------------------------------------------------------

7 Pricing section

-----------------------------------------------------------------------------------------*/
.pricing .info {
  display: inline-block;
  padding: 0 1rem;
  cursor: help;
  opacity: .85;
}

.pricing .info:hover {
  opacity: 1;
}

.pricing h5 {
  margin-bottom: 1em;
}

.pricing .price {
  font-size: 5rem;
  font-weight: 200;
}

.pricing sup {
  top: -3rem;
}

.pricing .divider {
  margin-top: 2rem;
  background: #fff;
}

@media only screen and (min-width: 993px) {
  .pricing li::before {
    content: '— ';
  }
}

@media only screen and (max-width: 992px) {
  .pricing .price-box {
    text-align: center;
  }
  .pricing .info {
    position: absolute;
  }
}

.faq .collapsible {
  border: 0;
  box-shadow: none;
}

.faq .collapsible-header {
  padding: 1rem 0;
  font-weight: 600;
  line-height: 2.5rem;
  background: transparent;
}

.faq .collapsible-body p {
  padding: 2rem 0;
}

/*---------------------------------------------------------------------------------------

8 Journal section

-----------------------------------------------------------------------------------------*/
.journal .info {
  padding: 3rem 0;
}

@media only screen and (min-width: 993px) {
  .journal .info:hover .meta {
    color: #fff;
  }
  .journal .info:hover .post-title::after {
    left: 0;
    opacity: 1;
  }
}

@media only screen and (max-width: 992px) {
  .journal .info {
    text-align: center;
  }
}

.journal .meta {
  color: rgba(255, 255, 255, 0.75);
}

@media only screen and (min-width: 993px) {
  .journal .post-title::after {
    position: relative;
    left: -1rem;
    content: ' →';
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  }
}

/*---------------------------------------------------------------------------------------

9 Form

-----------------------------------------------------------------------------------------*/
.input-field label {
  left: 0;
  color: #fff;
}

input[type=text],
input[type=email],
input[type=email],
textarea.materialize-textarea {
  color: #fff;
  border-bottom-color: #fff;
  border-bottom-width: 2px;
}

.input-field input[type=text]:focus:not([readonly]),
.input-field input[type=email]:focus,
.input-field input[type=email]:focus:not([readonly]),
input[type=email]:focus,
input[type=email]:focus:not([readonly]),
textarea.materialize-textarea:focus,
textarea.materialize-textarea:focus:not([readonly]) {
  border-bottom-color: #fff;
  border-bottom-width: 2px;
  box-shadow: none;
}

.input-field input[type=text]:focus:not([readonly]) + label,
.input-field input[type=email]:focus + label,
.input-field input[type=email]:focus:not([readonly]) + label,
input[type=email]:focus + label,
input[type=email]:focus:not([readonly]) + label,
textarea.materialize-textarea:focus + label,
textarea.materialize-textarea:focus:not([readonly]) + label {
  color: #fff;
}

.input-field input[type=text].valid,
.input-field input[type=email].valid,
textarea.materialize-textarea.valid {
  border-bottom-color: #fff;
  box-shadow: none;
}

.input-field input[type=text].invalid,
.input-field input[type=email].invalid,
textarea.materialize-textarea.invalid {
  border-bottom-color: #fff;
  box-shadow: none;
}

.input-field .prefix.active {
  color: #fff;
}

form {
  padding: 1rem;
  background: rgba(255, 255, 255, 0.02);
}

/*---------------------------------------------------------------------------------------

10 Toasts

-----------------------------------------------------------------------------------------*/
@media only screen and (max-width: 992px) and (min-width: 601px) {
  #toast-container {
    right: 5%;
  }
}

.toast {
  display: none;
  height: auto;
  padding: 20px;
  line-height: 1.75rem;
}

.toast:first-of-type {
  display: block;
}

.toast a {
  display: block;
  color: #fff;
  text-decoration: underline;
}

.toast.error {
  background-color: #ff5252;
}

.toast.success {
  color: #000;
  background-color: #00e676;
}

/*---------------------------------------------------------------------------------------

11 Slider

-----------------------------------------------------------------------------------------*/
.slider .slides {
  background-color: transparent;
}

.slider .indicators .indicator-item {
  background-color: rgba(255, 255, 255, 0.5);
}

.slider .indicators .indicator-item.active {
  background-color: #fff;
}

.slider .indicators .indicator-item:hover {
  background-color: rgba(255, 255, 255, 0.75);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
